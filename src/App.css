* {
  box-sizing: border-box;
}

:root {
  text-align: left;
  font-family: Arial, Helvetica, sans-serif;
  color: white;
  --green-background: rgb(125, 225, 55);
  --blue-background: rgb(65, 165, 225);
  --yellow-background: rgb(255, 255, 0);
  --medium-font: 1.5rem;
  --title-font: 3rem;
  --fade-time: 0.5s;
}

body {
  background-color: var(--blue-background);
}

.App {
  position: relative;
}

.welcome-screen-heading {
  font-size: var(--title-font);
}

.question-introduction {
  color: navy;
}

.answers {
  display: flex;
  flex-direction: column;
}

.initial-text {
  font-size: var(--medium-font);
}

.question-header {
  display: flex;
  justify-content: center;
  align-items: center;
}

.page-number {
  width: min-content;
  color: white;
}

.property-image-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: left;
  align-items: left;
  height: 150px;
  width: 180px;
  border-radius: 10%;
  margin-bottom: 25px;
  box-shadow: 0px 0px 10px -5px black;
}

.property-image-wrapper:hover {
  cursor: pointer;
  box-shadow: 0px 0px 10px 0px black;
}

.property-image {
  border-radius: 10%;
}

.answer {
  position: relative;
  display: flex;
  align-items: center;
  bottom: 45px;
}

.answer-circle {
  border: 2px solid white;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.4);
  color: white;
  width: 30px;
  height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: 5px;
}

.answer-circle > p {
  position: relative;
}

.image-title-and-price-container {
  margin-left: 5px;
}

.image-title,
.image-price {
  margin: 0;
  text-shadow: 0px 0px 2px black, 0px 0px 2px black, 0px 0px 2px black;
}

.hide {
  display: none;
}

.absolutely-positioned {
  width: 85vw;
  margin: auto;
}

.fade-out-to-left {
  animation: fadeOutToLeft var(--fade-time) linear forwards;
}

.fade-out-to-right {
  animation: fadeOutToRight var(--fade-time) linear forwards;
}

.fade-in-from-left {
  animation: fadeInFromLeft var(--fade-time) linear forwards;
}

.fade-in-from-right {
  animation: fadeInFromRight var(--fade-time) linear forwards;
}

.fade-in-from-center {
  animation: fadeInCenter var(--fade-time) forwards;
}

@keyframes fadeOutToLeft {
  0% {
    transform: translateX(0px);
    opacity: 1;
    position: absolute;
  }
  100% {
    transform: translateX(-500px);
    opacity: 0;
    display: none;
    position: absolute;
  }
}

@keyframes fadeOutToRight {
  0% {
    transform: translateX(0px);
    opacity: 0;
    display: none;
  }
  100% {
    transform: translateX(500px);
    opacity: 0;
    display: none;
  }
}

@keyframes fadeInFromLeft {
  0% {
    transform: translateX(-500px);
    opacity: 0;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

@keyframes fadeInFromRight {
  0% {
    transform: translateX(500px);
    opacity: 0;
  }
  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

@keyframes fadeInCenter {
  0% {
    transform: translateY(100px);
    opacity: 0;
    display: none;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

@media only screen and (min-width: 425px) {
  .absolutely-positioned {
    width: 80%;
    margin: auto;
  }
}
